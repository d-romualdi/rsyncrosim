% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addScenarioToFolder.R
\name{addScenarioToFolder}
\alias{addScenarioToFolder}
\alias{addScenarioToFolder,character-method}
\alias{addScenarioToFolder,Scenario-method}
\title{Add a Scenario to a Project folder}
\usage{
addScenarioToFolder(ssimObject, folderId)

\S4method{addScenarioToFolder}{character}(ssimObject, folderId)

\S4method{addScenarioToFolder}{Scenario}(ssimObject, folderId)
}
\arguments{
\item{ssimObject}{\code{\link{Scenario}} object}

\item{folderId}{integer}
}
\value{
Invisibly returns \code{TRUE} upon success (i.e.successful 
removal) and \code{FALSE} upon failure.
}
\description{
Add a \code{\link{Scenario}} to a \code{\link{Project}} folder. 
Used to organize Scenarios in the SyncroSim User Interface.
}
\examples{
\donttest{
# Specify file path and name of new SsimLibrary
myLibraryName <- file.path(tempdir(), "testlib")

# Set up a SyncroSim Session and SsimLibrary
mySession <- session()
myLibrary <- ssimLibrary(name = myLibraryName, session = mySession)
myProject <- project(ssimLibrary, name = "Definitions")

# Create a new folder at the Project level and extract the folder Id
folderIdString <- createProjectFolder(myProject, "NewFolder")
folderId <- as.integer(strsplit(folderIdString, ": ")[[1]][2])

# Create Scenario and add to the above folder
myScenario <- scenario(myProject, "NewScenario")
addScenarioToFolder(myScenario, folderId)
}

}
